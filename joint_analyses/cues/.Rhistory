df_neg_grouped <- read.csv('250_neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "chocolate") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "chocolate") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
df_pos <- read.csv('1000_pos_groundPlane_participantData_for_lme.csv')
df_pos$subjID <- factor(df_pos$subjID)
df_pos$duration <- factor(df_pos$duration)
df_pos$stimulus <- factor(df_pos$stimulus)
df_pos_grouped <- read.csv('1000_pos_groundPlane_participantData_grouped_for_lme.csv')
df_neg <- read.csv('1000_neg_groundPlane_participantData_for_lme.csv')
df_neg$subjID <- factor(df_neg$subjID)
df_neg$duration <- factor(df_neg$duration)
df_neg$stimulus <- factor(df_neg$stimulus)
df_neg_grouped <- read.csv('1000_neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
# #2
# geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
# #3
# geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
# #4
# geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
# #5
# geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
# Load data
setwd("/Users/prachimahableshwarkar/Documents/GW/Depth_MTurk/spatial_perception_SUNRGBD/joint_analyses/cues/")
df <- read.csv('groundPlane_participantData_for_lme.csv')
df$subjID <- factor(df$subjID)
# df$duration <- factor(df$duration)
df$stimulus <- factor(df$stimulus)
df_grouped <- read.csv('groundPlane_participantData_grouped_for_lme.csv')
# Create models
# fixed effect only:
m_dur<- lm(abs_s_residual ~ duration, data=df)
summary(m_dur)
m_stim<- lm(abs_s_residual ~ stimulus, data=df)
summary(m_stim)
sort(unique(df$duration))
mod_main <- lmer(s_residual ~ groundPlane + duration + groundPlane*duration + (1|subjID) + (1|actual_depth), data=df)
summary(mod_main)
mod_main_abs <- lmer(abs_s_residual ~ groundPlane + duration + groundPlane*duration + (1|subjID) + (1|actual_depth), data=df)
summary(mod_main_abs)
sjPlot::plot_model(mod_main,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_main)
sjPlot::plot_model(mod_main_abs,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_main_abs)
anova(mod_main)
anova(mod_main_abs)
anova(mod_main_abs)
# Plotting code: https://lmudge13.github.io/sample_code/mixed_effects.html
#
# Use the effects package --> effect function. term= the fixed effect you want to get data on, mod= name of your model.
gp_effects <- effects::effect(term= "groundPlane", mod= mod_main)
summary(gp_effects) #output of what the values are
# Save the effects values as a df:
gp_effects_df <- as.data.frame(gp_effects)
#1
groundPlane_plot <- ggplot() +
#2
geom_point(data=subset(df_grouped), aes(groundPlane, s_residual)) +
#3
geom_point(data=gp_effects_df, aes(x=groundPlane, y=fit), color="blue") +
#4
geom_line(data=gp_effects_df, aes(x=groundPlane, y=fit), color="blue") +
#5
geom_ribbon(data= gp_effects_df, aes(x=groundPlane, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="groundPlane", y="Residuals")
groundPlane_plot
gp_effects_abs <- effects::effect(term= "groundPlane", mod= mod_main_abs)
summary(gp_effects_abs) #output of what the values are
# Save the effects values as a df:
gp_effects_abs_df <- as.data.frame(gp_effects_abs)
#1
groundPlane_plot <- ggplot() +
#2
geom_point(data=subset(df_grouped), aes(groundPlane, abs_s_residual)) +
#3
geom_point(data=gp_effects_abs_df, aes(x=groundPlane, y=fit), color="blue") +
#4
geom_line(data=gp_effects_abs_df, aes(x=groundPlane, y=fit), color="blue") +
#5
geom_ribbon(data= gp_effects_abs_df, aes(x=groundPlane, ymin=lower, ymax=upper), alpha= 0.3, fill="blue") +
#6
labs(x="groundPlane", y="Abs(Residuals)")
groundPlane_plot
df_pos <- read.csv('pos_groundPlane_participantData_for_lme.csv')
df_pos$subjID <- factor(df_pos$subjID)
# df_pos$duration <- factor(df_pos$duration)
df_pos$stimulus <- factor(df_pos$stimulus)
df_pos_grouped <- read.csv('pos_groundPlane_participantData_grouped_for_lme.csv')
df_neg <- read.csv('neg_groundPlane_participantData_for_lme.csv')
df_neg$subjID <- factor(df_neg$subjID)
# df_neg$duration <- factor(df_neg$duration)
df_neg$stimulus <- factor(df_neg$stimulus)
df_neg_grouped <- read.csv('neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + duration + groundPlane*duration + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + duration + groundPlane*duration + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkgrey") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkgrey") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkgrey") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkgrey") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkgrey") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkgrey") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
df_pos <- read.csv('125_pos_groundPlane_participantData_for_lme.csv')
df_pos$subjID <- factor(df_pos$subjID)
# df_pos$duration <- factor(df_pos$duration)
df_pos$stimulus <- factor(df_pos$stimulus)
df_pos_grouped <- read.csv('125_pos_groundPlane_participantData_grouped_for_lme.csv')
df_neg <- read.csv('125_neg_groundPlane_participantData_for_lme.csv')
df_neg$subjID <- factor(df_neg$subjID)
# df_neg$duration <- factor(df_neg$duration)
df_neg$stimulus <- factor(df_neg$stimulus)
df_neg_grouped <- read.csv('125_neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkgreen") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkgreen") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkgreen") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkgreen") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkgreen") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkgreen") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
# Load data
setwd("/Users/prachimahableshwarkar/Documents/GW/Depth_MTurk/spatial_perception_SUNRGBD/joint_analyses/cues/")
df_pos <- read.csv('250_pos_groundPlane_participantData_for_lme.csv')
df_pos$subjID <- factor(df_pos$subjID)
# df_pos$duration <- factor(df_pos$duration)
df_pos$stimulus <- factor(df_pos$stimulus)
df_pos_grouped <- read.csv('250_pos_groundPlane_participantData_grouped_for_lme.csv')
df_neg <- read.csv('250_neg_groundPlane_participantData_for_lme.csv')
df_neg$subjID <- factor(df_neg$subjID)
# df_neg$duration <- factor(df_neg$duration)
df_neg$stimulus <- factor(df_neg$stimulus)
df_neg_grouped <- read.csv('250_neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "chocolate") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "chocolate") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "chocolate") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
df_pos <- read.csv('1000_pos_groundPlane_participantData_for_lme.csv')
df_pos$subjID <- factor(df_pos$subjID)
# df_pos$duration <- factor(df_pos$duration)
df_pos$stimulus <- factor(df_pos$stimulus)
df_pos_grouped <- read.csv('1000_pos_groundPlane_participantData_grouped_for_lme.csv')
df_neg <- read.csv('1000_neg_groundPlane_participantData_for_lme.csv')
df_neg$subjID <- factor(df_neg$subjID)
# df_neg$duration <- factor(df_neg$duration)
df_neg$stimulus <- factor(df_neg$stimulus)
df_neg_grouped <- read.csv('1000_neg_groundPlane_participantData_grouped_for_lme.csv')
sort(unique(df_pos$duration))
mod_pos <- lmer(pos_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_pos)
summary(mod_pos)
mod_neg <- lmer(neg_s_residual ~ groundPlane + (1|subjID) + (1|actual_depth), data=df_neg)
summary(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
sjPlot::plot_model(mod_pos,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_pos)
anova(mod_pos)
sjPlot::plot_model(mod_neg,
show.values=TRUE, show.p=TRUE,
title="")
sjPlot:: tab_model(mod_neg)
anova(mod_neg)
gp_effects_pos <- effects::effect(term= "groundPlane", mod= mod_pos)
summary(gp_effects_pos) #output of what the values are
# Save the effects values as a df:
gp_effects_pos_df <- as.data.frame(gp_effects_pos)
gp_effects_neg <- effects::effect(term= "groundPlane", mod= mod_neg)
summary(gp_effects_neg) #output of what the values are
# Save the effects values as a df:
gp_effects_neg_df <- as.data.frame(gp_effects_neg)
#1
groundPlane_plot <- ggplot() +
theme_minimal() +  # Removes background and grid
theme(
panel.grid = element_blank(),  # Removes grid lines
panel.background = element_blank(),  # Removes background
axis.text = element_text(size = 12),  # Increase axis tick label font size
axis.title = element_text(size = 14),  # Increase axis label font size
axis.line = element_line(color = "black")  # Sets the color of axis spines
) +
#2
geom_point(data = subset(df_pos_grouped), aes(groundPlane, pos_s_residual)) +
#3
geom_point(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_pos_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_pos_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#2
geom_point(data = subset(df_neg_grouped), aes(groundPlane, neg_s_residual)) +
#3
geom_point(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#4
geom_line(data = gp_effects_neg_df, aes(x = groundPlane, y = fit), color = "darkviolet") +
#5
geom_ribbon(data = gp_effects_neg_df, aes(x = groundPlane, ymin = lower, ymax = upper), alpha = 0.3, fill = "darkviolet") +
#6
labs(x = "Complete Ground Plane", y = "Residuals")
# Display the plot
print(groundPlane_plot)
